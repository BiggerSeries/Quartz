#version 450 core

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout(location = 0) uniform uint baseInstance;

struct DynamicMatrixPair {
    mat4 modelMatrix;
    mat3 normalMatrix;
};

struct DynamicMatrixSSBOPair {
    mat4 modelMatrix;
    mat4 normalMatrix;
};

struct InstanceData {
    mat4 modelMatrix;
    mat3 normalMatrix;
    ivec3 worldPosition;
    int dynamicMatrixID;
};

layout(std430, binding = 0) buffer dynamicMatrixBuffer {
    DynamicMatrixSSBOPair dynamicMatricesSSBO[];
};

DynamicMatrixPair getDynamicMatrix(int matrixID) {
    DynamicMatrixSSBOPair ssboPair = dynamicMatricesSSBO[matrixID];

    DynamicMatrixPair pair;
    pair.modelMatrix = ssboPair.modelMatrix;
    pair.normalMatrix = mat3(ssboPair.normalMatrix);

    return pair;
}

layout(std430, binding = 1) buffer inputInstanceBuffer {
    InstanceData inputInstances[];
};

layout(std430, binding = 2) buffer outputInstanceBuffer {
    InstanceData outputInstances[];
};

void main() {
    uint instanceID = gl_GlobalInvocationID.x + baseInstance;
    InstanceData data = inputInstances[instanceID];
    DynamicMatrixPair matrices = getDynamicMatrix(data.dynamicMatrixID);
    data.modelMatrix = matrices.modelMatrix * data.modelMatrix;
    data.normalMatrix = matrices.normalMatrix * data.normalMatrix;
    outputInstances[instanceID] = data;
}
